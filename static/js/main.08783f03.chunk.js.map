{"version":3,"sources":["assets/gif/working-on-it.gif","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","href","id","target","src","require","class","Github","color","size","Gitlab","DevDotTo","Linkedin","Twitter","Instagram","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wLAAAA,EAAOC,QAAU,IAA0B,2C,uICgG5BC,MApFf,WACE,OACE,yBAAKC,UAAU,OAEb,gCACE,6BACE,4BACE,4BAAI,uBAAGC,KAAK,SAAR,SACJ,4BAAI,uBAAGA,KAAK,UAAR,UACJ,4BAAI,uBAAGA,KAAK,WAAR,WACJ,4BAAI,uBAAGA,KAAK,SAAR,UAEN,4BACE,4BAAI,uBAAGA,KAAK,KAAR,YACJ,4BAAI,uBAAGA,KAAK,KAAR,cAKV,8BACE,6BAASC,GAAG,QACV,+CACQ,6BADR,cAEa,6BAFb,kBAKA,yDAAoB,uBAAGD,KAAK,2BAA2BE,OAAO,UAA1C,uBAGtB,6BAASD,GAAG,SACV,qCACA,uIACA,+WACA,8hBACA,8GAEE,gDAEF,oMACA,qOAGF,6BAASA,GAAG,UACV,sCACA,4IACA,4BACE,6DACA,uDACA,uCACA,0DACA,gDACA,6CACA,gDACA,2CACA,0CAEF,oXAGF,6BAASA,GAAG,QACV,qCAGF,6BAASA,GAAG,OACV,yBAAKE,IAAKC,EAAQ,QAItB,4BAAQH,GAAG,UACT,4BACE,4BAAI,uBAAGI,MAAM,gBAAgBH,OAAO,SAASF,KAAK,6BAA4B,kBAACM,EAAA,EAAD,CAAQC,MAAM,OAAOC,KAAM,OACzG,4BAAI,uBAAGH,MAAM,gBAAgBH,OAAO,SAASF,KAAK,6BAA4B,kBAACS,EAAA,EAAD,CAAQF,MAAM,OAAOC,KAAM,OACzG,4BAAI,uBAAGH,MAAM,aAAaH,OAAO,SAASF,KAAK,yBAAwB,kBAACU,EAAA,EAAD,CAAUH,MAAM,OAAOC,KAAM,OACpG,4BAAI,uBAAGH,MAAM,kBAAkBH,OAAO,SAASF,KAAK,uCAAsC,kBAACW,EAAA,EAAD,CAAUJ,MAAM,OAAOC,KAAM,OACvH,4BAAI,uBAAGH,MAAM,iBAAiBH,OAAO,SAASF,KAAK,iCAAgC,kBAACY,EAAA,EAAD,CAASL,MAAM,OAAOC,KAAM,OAC/G,4BAAI,uBAAGH,MAAM,mBAAmBH,OAAO,SAASF,KAAK,wCAAuC,kBAACa,EAAA,EAAD,CAAWN,MAAM,OAAOC,KAAM,QAE5H,qDAA0B,6BAA1B,wBC7EYM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.08783f03.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/working-on-it.4abfa856.gif\";","import React from 'react';\r\n\r\nimport './App.css';\r\nimport {\r\n  Github,\r\n  Gitlab,\r\n  DevDotTo,\r\n  Linkedin,\r\n  Twitter,\r\n  Instagram,\r\n} from '@icons-pack/react-simple-icons';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <header>\r\n        <nav>\r\n          <ul>\r\n            <li><a href=\"#home\">HOME</a></li>\r\n            <li><a href=\"#about\">ABOUT</a></li>\r\n            <li><a href=\"#skills\">SKILLS</a></li>\r\n            <li><a href=\"#work\">WORK</a></li>\r\n          </ul>\r\n          <ul>\r\n            <li><a href=\"#\">CONTACT</a></li>\r\n            <li><a href=\"#\">RESUME</a></li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      \r\n      <main>\r\n        <section id=\"home\">\r\n          <h1>\r\n            Hi, ðŸ‘‹<br/>\r\n            I'm Sepehr,<br/>\r\n            web developer.\r\n          </h1>\r\n          <h3>Get in touch ðŸ‘‰ <a href=\"mailto:sepsol@techie.com\" target=\"_blank\">sepsol@techie.com</a></h3>\r\n        </section>\r\n        \r\n        <section id=\"about\">\r\n          <h2>About</h2>\r\n          <p>Hello! I'm Sepehr, a full-stack software engineer and web developer based in San Francisco Bay Area, CA.</p>\r\n          <p>I love tech and have been a tech-enthusiast since 7 years ago, and recently I decided to roll up my sleeves and be the builder of the things that have always interested me. During the past 4 years, I've founded and worked for different startups in various positions, which allowed me to meet many nice talented people and entrepreneurs.</p>\r\n          <p>I have worked with a lot of popular software programs before becoming a developer and one of the most valuable skills I've learned from my past journey, is how to find high-quality resources and link myself to appropriate people to learn new skills. I recognize myself as a fast-learner, and you don't have to take my word for it! I was well-known at my university for my well-rounded research and presentation on various subjects. Plus, here's how my previous employer describes me in my recommendation letter:</p>\r\n          <blockquote>\r\n            We think that Sepehr has a high speed in learning programming concepts.\r\n            <footer>Sina Maleki</footer>\r\n          </blockquote>\r\n          <p>As a software engineer, I enjoy using my skills to make innovative things that solve real-world problems and I love to bridge the gap between engineering and design.</p>\r\n          <p>When I'm not working, I either watch YouTube for fun or to expand my knowledge, play with the UI/UX of other apps and try to come up with my twist on their concept, or sometimes play video games :)</p>\r\n        </section>\r\n        \r\n        <section id=\"skills\">\r\n          <h2>Skills</h2>\r\n          <p>I'm always working hard to expand my skill-set. Here are a few technologies I've been working with recently*:</p>\r\n          <ul>\r\n            <li>JavaScript (ES6) / TypeScript</li>\r\n            <li>React.js / React Native</li>\r\n            <li>Node.js</li>\r\n            <li>Express.js / REST-ful APIs</li>\r\n            <li>GraphQL / Apollo</li>\r\n            <li>HTML & (S)CSS</li>\r\n            <li>MongoDB / No-SQL</li>\r\n            <li>MySQL / SQL</li>\r\n            <li>WordPress</li>\r\n          </ul>\r\n          <footer>Other technologies I've worked with include but are not limited to Git / Bash / Chrome DevTools / Postman / Netlify / Heroku / Ngrok / Nodemon / Shopify Polaris / Formik / Yup / Fonk and outside the world of programming I've worked with Adobe Creative Cloud / Microsoft Office / Trimble SketchUp / McNeel Rhinoceros / Autodesk Products</footer>\r\n        </section>\r\n        \r\n        <section id=\"work\">\r\n          <h2>Work</h2>\r\n        </section>\r\n\r\n        <section id=\"wip\">\r\n          <img src={require(\"./assets/gif/working-on-it.gif\")} />\r\n        </section>\r\n      </main>\r\n      \r\n      <footer id=\"footer\">\r\n        <ul>\r\n          <li><a class=\"social github\" target=\"_blank\" href=\"https://github.com/sepsol\"><Github color=\"#000\" size={24}/></a></li>\r\n          <li><a class=\"social gitlab\" target=\"_blank\" href=\"https://gitlab.com/sepsol\"><Gitlab color=\"#000\" size={24}/></a></li>\r\n          <li><a class=\"social dev\" target=\"_blank\" href=\"https://dev.to/sepsol\"><DevDotTo color=\"#000\" size={32}/></a></li>\r\n          <li><a class=\"social linkedin\" target=\"_blank\" href=\"https://www.linkedin.com/in/sepsol/\"><Linkedin color=\"#000\" size={24}/></a></li>\r\n          <li><a class=\"social twitter\" target=\"_blank\" href=\"https://twitter.com/mr_sepsol\"><Twitter color=\"#000\" size={24}/></a></li>\r\n          <li><a class=\"social instagram\" target=\"_blank\" href=\"https://www.instagram.com/mr_sepsol/\"><Instagram color=\"#000\" size={24}/></a></li>\r\n        </ul>\r\n        <div>Designed and built by<br/> Sepehr Soltanieh</div>\r\n      </footer>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}